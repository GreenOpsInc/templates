metadata:
  name: test2
  generateName: tester-
  namespace: argo
  uid: dcd49e27-71c5-4999-8cd4-1c294cccafae
  resourceVersion: '991716'
  generation: 1
  creationTimestamp: '2022-05-16T13:22:38Z'
  labels:
    clusterName: hubcluster
    workflows.argoproj.io/creator: system-serviceaccount-argo-argo-server
  managedFields:
    - manager: argo
      operation: Update
      apiVersion: argoproj.io/v1alpha1
      time: '2022-05-16T13:22:38Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:clusterName: {}
            f:workflows.argoproj.io/creator: {}
        f:spec: {}
spec:
  templates:
    - name: starter
      inputs: {}
      outputs: {}
      metadata: {}
      steps:
        - - name: build
            template: argocd-sync-and-wait
            arguments: {}
    - name: argocd-sync-and-wait
      inputs:
        parameters:
          - name: argocd-version
            value: v1.6.0
          - name: application-name
            value: atlastestapp-dev
          - name: revision
            value: main
          - name: flags
            value: '--'
          - name: argocd-server-address
            value: 192.168.64.2:31907
          - name: argocd-credentials-secret
            value: argocd-credentials-secret
      outputs: {}
      metadata: {}
      script:
        name: ''
        image: argoproj/argocd:{{inputs.parameters.argocd-version}}
        command:
          - bash
        env:
          - name: ARGOCD_AUTH_TOKEN
          - name: ARGOCD_USERNAME
            value: admin
          - name: ARGOCD_PASSWORD
            value: N39sRGJSPPtNHRk7
          - name: ARGOCD_SERVER
            value: '{{inputs.parameters.argocd-server-address}}'
        resources: {}
        source: >
          #!/bin/bash
          set -euo pipefail
          if [[ -z $ARGOCD_AUTH_TOKEN ]] && [[ -z "$ARGOCD_USERNAME" || -z
          "$ARGOCD_PASSWORD" ]]; then
            echo "Either the ARGOCD_AUTH_TOKEN must be specified, or the ARGOCD_USERNAME/ARGOCD_PASSWORD must be specified."
            exit 1
          fi 
          if [ -z $ARGOCD_AUTH_TOKEN ]; then
            yes | argocd login "$ARGOCD_SERVER" --username=$ARGOCD_USERNAME --password=$ARGOCD_PASSWORD {{inputs.parameters.flags}} || echo ${PIPESTATUS[@]}
          fi
          echo "Running as ArgoCD User:"
          argocd account get-user-info {{inputs.parameters.flags}}
          argocd app sync {{inputs.parameters.application-name}} --revision
          {{inputs.parameters.revision}} {{inputs.parameters.flags}}
          argocd app wait {{inputs.parameters.application-name}} --health
          {{inputs.parameters.flags}}
  entrypoint: starter
  arguments:
    parameters:
      - name: message
        value: hello argo
